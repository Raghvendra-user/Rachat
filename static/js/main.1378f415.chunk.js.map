{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","className","src","sender","avatar","alt","file","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","username","backgroundImage","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","position","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1378f415.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\r\n\r\n\r\n  if (message.attachments && message.attachments.length > 0) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <img className=\"chat-avatar\" src={message.sender.avatar} alt=\"sender's avatar\"></img>\r\n        </div>\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ float: 'right' }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img className=\"chat-avatar\" src={message.sender.avatar} alt=\"sender's avatar\"></img>\r\n      </div>\r\n      <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n        {message.text}\r\n        {/* {console.log(message)}\r\n      {console.log(message.sender.avatar)} */}\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default MyMessage;\r\n","const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n        />\r\n      )}\r\n      {message.attachments && message.attachments.length > 0\r\n        ? (\r\n          <img\r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n          />\r\n        )\r\n        : (\r\n          <div>\r\n\r\n            <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n              {message.text}\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <form className=\"message-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"message-input\"\r\n          placeholder=\"Send a message...\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n        />\r\n        <label htmlFor=\"upload-button\">\r\n          <span className=\"image-button\">\r\n            <PictureOutlined className=\"picture-icon\" />\r\n          </span>\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          multiple={false}\r\n          id=\"upload-button\"\r\n          style={{ display: 'none' }}\r\n          onChange={handleUpload.bind(this)}\r\n        />\r\n\r\n        <button type=\"submit\" className=\"send-button\">\r\n          <SendOutlined className=\"send-icon\" />\r\n        </button>\r\n\r\n      </form>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <>\r\n          <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n            <div className=\"message-block\">\r\n              {isMyMessage\r\n                ? <MyMessage message={message} />\r\n                : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n            </div>\r\n            <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n              {renderReadReceipts(message, isMyMessage)}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\" style={{ position: 'absolute' }}>\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n\r\n","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = \"4d636b79-e3fa-4cfe-9c44-42bd74e3d35a\";\r\n\r\nconst Modal = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.');\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"bg\" style={{ position: 'fixed', width: '100%' }}>\r\n        <div className=\"box\">\r\n          <h1 className=\"title\">Login</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"inp\" placeholder=\"Username\" required />\r\n            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"inp\" placeholder=\"Password\" required />\r\n            <div align=\"center\">\r\n              <button type=\"submit\" className=\"btn\">\r\n                <span>Start chatting</span>\r\n              </button>\r\n\r\n            </div>\r\n          </form>\r\n          <h1>{error}</h1>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport SignInPage from \"./components/SignIn\";\r\nimport './App.css';\r\n\r\nconst projectID = \"4d636b79-e3fa-4cfe-9c44-42bd74e3d35a\";\r\n\r\nconst App = () => {\r\n    if (!localStorage.getItem('username')) return <LoginForm />;\r\n\r\n    return (\r\n        <>\r\n            <ChatEngine\r\n                height=\"100vh\"\r\n                projectID={projectID}\r\n                userName={localStorage.getItem('username')}\r\n                userSecret={localStorage.getItem('password')}\r\n                renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n                onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n            />\r\n            {/* <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/signIn\" component={SignInPage} />\r\n                </Switch>\r\n            </Router> */}\r\n        </>\r\n    );\r\n};\r\n\r\n// infinite scroll, logout, more customizations...\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}